local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)

getgenv().AutoQuest = false;
getgenv().autoplatform = false;
getgenv().AutoGinseng = false;
getgenv().AutoYinYang = false;
getgenv().AutoLotus = false;
getgenv().AutoMoon = false;
getgenv().AutoInsight = false;
wait_time = 2

local ts = game:GetService("TweenService")

local function Tween(part, endpos, speed)
    if part and endpos then
        local Time = 0.50
        local Info = TweenInfo.new(Time, Enum.EasingStyle.Linear)
        local Tween = ts:Create(part,Info,{CFrame = CFrame.new(endpos.X,endpos.Y,endpos.Z)})
        Tween:Play()
        wait(Time)
    end
end
local function Tween2(part, endpos, speed)
    if part and endpos then
        local Time = 7.5
        local Info = TweenInfo.new(Time, Enum.EasingStyle.Linear)
        local Tween = ts:Create(part,Info,{CFrame = CFrame.new(endpos.X,endpos.Y,endpos.Z)})
        Tween:Play()
        wait(Time)
    end
end

function LoadQ()
    Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(5808, 813, -1702), 5)
    wait(1)
    Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-2628, 75, 4061), 5)
end
function Quest()
    spawn(function()
        while AutoQuest do
            
            local quest1 = workspace["Quest NPCS"]["Elder - Quest (2)"]:FindFirstChild("Quest", 1)
            local quest2 = workspace["Quest NPCS"].Angel:FindFirstChild("Quest", 1)
            local lol = {
                EnemyName = quest1.EnemyName;
                EnemyAmount = quest2.EnemyAmount;
                Reward = quest2.Reward;
                RankRequirement = quest1.RankRequirement;
            }
            
            game:GetService("ReplicatedStorage")["Quest Remote Events"].EnableQuest:FireServer(lol)

            Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-2261.49, 83.5238, 3993.08), 5)
            wait(0.9)
            
            local quest1 = workspace["Quest NPCS"]["Damon - Quest"]:FindFirstChild("Quest", 1)
            local quest2 = workspace["Quest NPCS"].Angel:FindFirstChild("Quest", 1)
            local lol = {
                EnemyName = quest1.EnemyName;
                EnemyAmount = quest2.EnemyAmount;
                Reward = quest2.Reward;
                RankRequirement = quest1.RankRequirement;
            }
            game:GetService("ReplicatedStorage")["Quest Remote Events"].EnableQuest:FireServer(lol)
            Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-2986, 71, 4364), 5)
            wait(0.9)

            local quest1 = workspace["Quest NPCS"]["Damon - Quest"]:FindFirstChild("Quest", 1)
            local quest2 = workspace["Quest NPCS"].Angel:FindFirstChild("Quest", 1)
            local lol = {
                EnemyName = quest1.EnemyName;
                EnemyAmount = quest2.EnemyAmount;
                Reward = quest2.Reward;
                RankRequirement = quest1.RankRequirement;
            }
            game:GetService("ReplicatedStorage")["Quest Remote Events"].EnableQuest:FireServer(lol)
            Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-3052, 71, 4505), 5)
            wait(0.9)

            local quest1 = workspace["Quest NPCS"]["Damon (Last) - Quest"]:FindFirstChild("Quest", 1)
            local quest2 = workspace["Quest NPCS"].Angel:FindFirstChild("Quest", 1)
            local lol = {
                EnemyName = quest1.EnemyName;
                EnemyAmount = quest2.EnemyAmount;
                Reward = quest2.Reward;
                RankRequirement = quest1.RankRequirement;
            }
            game:GetService("ReplicatedStorage")["Quest Remote Events"].EnableQuest:FireServer(lol)
            Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-3217, 71.7, 4616), 5)
            wait(0.9)

            local quest1 = workspace["Quest NPCS"]["Damon (2) - Quest"]:FindFirstChild("Quest", 1)
            local quest2 = workspace["Quest NPCS"].Angel:FindFirstChild("Quest", 1)
            local lol = {
                EnemyName = quest1.EnemyName;
                EnemyAmount = quest2.EnemyAmount;
                Reward = quest2.Reward;
                RankRequirement = quest1.RankRequirement;
            }
            game:GetService("ReplicatedStorage")["Quest Remote Events"].EnableQuest:FireServer(lol)
            Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-2871, 71, 4643), 5)
            wait(0.9)

            local quest1 = workspace["Quest NPCS"]["Elder - Quest (LAST)"]:FindFirstChild("Quest", 1)
            local quest2 = workspace["Quest NPCS"].Angel:FindFirstChild("Quest", 1)
            local lol = {
                EnemyName = quest1.EnemyName;
                EnemyAmount = quest2.EnemyAmount;
                Reward = quest2.Reward;
                RankRequirement = quest1.RankRequirement;
            }
            game:GetService("ReplicatedStorage")["Quest Remote Events"].EnableQuest:FireServer(lol)
            Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-2261.70, 164, 4055.80), 5)
            wait(0.9)
        end
    end)
end

function LoadG()
    Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(2251, 80, 1708), 5)
end
function Ginseng()
    spawn(function()
        while AutoGinseng == true do
            for i, v in pairs(game.Workspace.Areas["Forest Of Dao"].Ginseng:GetChildren()) do
                if AutoGinseng == false then break end
                Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, v.CFrame.p, 0.5)
                wait(0.3)
                local args = { v, "Ginseng" }
                game:GetService("ReplicatedStorage").Harvest.Harvest:FireServer(unpack(args))
                wait(wait_time) 
            end
        end
    end)
end

function LoadL()
    Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(3009, 76, 3681), 5)
end
function Lotus()
    spawn(function()
        while AutoLotus == true do
            for k, v in pairs(workspace.Areas["Green Pelago"]:GetChildren()) do
                if v.Name == "Lotus" then
                    v.Name = "XiaoGreen" .. k
                end
            end
            for i = 2, 36 do
                if AutoLotus == false then break end
                local endpos = game.Workspace.Areas["Green Pelago"]["XiaoGreen" .. i].CFrame.p
                Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, endpos, 0.3)
                wait(0.3)
                local args = {[1] = workspace.Areas:FindFirstChild("Green Pelago")["XiaoGreen" .. i],[2] = "Green Lotus"}
                game:GetService("ReplicatedStorage").Harvest.Harvest:FireServer(unpack(args))
                wait(wait_time)
            end
            for k, v in pairs(workspace.Areas["Green Pelago"]:GetChildren()) do
                if v.Name == "Lotus" then
                    v.Name = "XiaoGreen" .. k
                end
            end
            wait()
        end
    end)
end

function LoadY()
    Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(2547, 80, 3907), 5)
end
function YinYang()
    spawn(function()
        while AutoYinYang == true do
            for k, v in pairs(workspace.Areas["Demon Pelago"]:GetChildren()) do
                if v.Name == "Divine Yang Tree" then
                    v.Name = "XiaoRed" .. k
                end
            end
            for i = 2, 6 do
                if AutoYinYang == false then break end
                local plant = workspace.Areas["Demon Pelago"]["XiaoRed" .. i].Plant
                Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, plant.CFrame, 0.3)
                wait(0.3)
                local args = {[1] = plant, [2] = "Divine Yang Fruit"}
                game:GetService("ReplicatedStorage").Harvest.Harvest:FireServer(unpack(args))
                wait(wait_time) 
            end
            for k, v in pairs(workspace.Areas["Demon Pelago"]:GetChildren()) do
                if v.Name == "Divine Yang Tree" then
                    v.Name = "XiaoRed" .. k
                end
            end
            wait()
            for k, v in pairs(workspace.Areas["White Pelago"]:GetChildren()) do
                if v.Name == "Divine Yang Tree" then
                    v.Name = "XiaoBlue" .. k
                end
            end
            for i = 2, 6 do
                if AutoYinYang == false then break end
                local plant = workspace.Areas["White Pelago"]["XiaoBlue" .. i].Plant
                Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, plant.CFrame, 0.3)
                wait(0.3)
                local args = {[1] = plant, [2] = "Divine Yin Fruit"}
                game:GetService("ReplicatedStorage").Harvest.Harvest:FireServer(unpack(args))
                wait(wait_time)
            end              
            for k, v in pairs(workspace.Areas["White Pelago"]:GetChildren()) do
                if v.Name == "Divine Yang Tree" then
                    v.Name = "XiaoBlue" .. k
                end
            end
            wait()
        end
    end)
end

function LoadM()
    Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(6026, 35, 6013), 5)
end

function Moon()
    spawn(function()
        local counter = 1
        while AutoMoon == true do
            local ginsengPlants = workspace:GetChildren()
            for k, v in pairs(ginsengPlants) do
                if v.Name == "MoonFlower Grass" then
                    v.Name = "MoonieChan" .. counter
                    counter = counter + 1
                end
            end
            for i = 1, 17 do
                if AutoMoon == false then break end
                local mooniechannnn = workspace["MoonieChan" .. i]
                Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, mooniechannnn.CFrame, 0.3)
                wait(0.3)
                local args = { mooniechannnn, "Moon Flower" }
                game:GetService("ReplicatedStorage").Harvest.Harvest:FireServer(unpack(args))
                wait(wait_time)
            end
        end
    end)
end

function LoadI()
    Tween2(game.Players.LocalPlayer.Character.HumanoidRootPart, Vector3.new(-2954, 75, 4521), 5)
end
function Insight()
    spawn(function()
        while AutoInsight == true do
            for k, v in pairs(game.Workspace.Areas["Space-Crack"]:GetChildren()) do
                if Autoinsight == false then break end
                a = 0
                Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, v.CFrame.p + Vector3.new(0, 8, 0), 0.3 )
                wait(0.3)
                local args = { v, "InsightFruit"}
                game:GetService("ReplicatedStorage").Harvest.Harvest:FireServer(unpack(args))
                repeat
                    Tween(game.Players.LocalPlayer.Character.HumanoidRootPart, v.CFrame.p + Vector3.new(0, 8, 0), 0.3 )
                    a = a + 1
                until a == 4
            end
        end
    end)
end
function Delete()
    game:GetService("Workspace").Areas["Space-Crack"].Crack:Destroy()
    game:GetService("Workspace").Areas["Space-Crack"].blood:Destroy()
end

function Platform()
    spawn(function()
        local Part = Instance.new("Part", workspace)
        while autoplatform == true do
            Part.Anchored = true
            Part.Size = Vector3.new(10, .001, 10)
            while autoplatform do
                wait()
            Part.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, -3.02, 0)
              if autoplatform == false then
                game:GetService("Workspace").Part:Destroy()
              end
            end
        end
    end)
end

local library = loadstring(httpget(('https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wall%20v3')))()

local w = library:CreateWindow("Farm")

local x = library:CreateWindow("Harvest")

local a = w:CreateFolder("Quest")

local b = w:CreateFolder("Create Platform")

local c = w:CreateFolder("Credit")

local d = x:CreateFolder("Auto Harvest")


a:Button("Load Quest",function()
    LoadQ();
end)
a:Toggle("Quest",function(bool)
    getgenv().AutoQuest = bool
    print(': ', bool)
    if bool then
        Quest();
    end
end)

d:Button("Load Ginseng",function()
    LoadG();
end)
d:Toggle("Ginseng",function(bool)
    getgenv().AutoGinseng = bool
    print(': ', bool)
    if bool then
        Ginseng();
    end
end)

d:Button("Load Lotus",function()
    LoadL();
end)
d:Toggle("Lotus",function(bool)
    getgenv().AutoLotus = bool
    print(': ', bool)
    if bool then
        Lotus();
    end
end)

d:Button("Load Yin/Yang",function()
    LoadY();
end)
d:Toggle("Yin/Yang Fruit",function(bool)
    getgenv().AutoYinYang = bool
    print(': ', bool)
    if bool then
        YinYang();
    end
end)

d:Button("Load Moon",function()
    LoadM();
end)
d:Toggle("Moon Flower",function(bool)
    getgenv().AutoMoon = bool
    print(': ', bool)
    if bool then
        Moon();
    end
end)

d:Button("Load Insight",function()
    LoadI();
end)
d:Toggle("Insight Fruit",function(bool)
    getgenv().AutoInsight = bool
    print(': ', bool)
    if bool then
        Insight();
    end
end)
d:Button("Delete for insight",function()
    Delete();
end)

b:Toggle("Auto Platform",function(bool)
    getgenv().autoplatform = bool
    print(': ', bool)
    if bool then
        Platform()
    end
end)

c:Label("Demon Immortel",{
    TextSize = 25;
    TextColor = Color3.fromRGB(255,255,255);
    BgColor = Color3.fromRGB(69,69,69);
    
}) 

--[[
loadstring(game:HttpGet("https://raw.githubusercontent.com/DragonLords03/DragonLords03/main/SLQuests"))()

]]
